Сокетное соединение с сервером создается клиентом с помощью объекта класса Socket. При этом указывается IP-адрес сервера и номер порта. Если указано символьное имя домена, то Java преобразует его с помощью DNS-сервера к IP-адресу.
Например, если сервер установлен на этом же компьютере, соединение с сервером можно установить из приложения клиента с помощью инструкции: Socket socket = new Socket("ИМЯ_СЕРВЕРА", 8030);
Сервер ожидает сообщения клиента и должен быть заранее запущен с указанием определенного порта.
Объект класса ServerSocket создается с указанием конструктору номера порта и ожидает сообщения клиента с помощью метода accept()класса ServerSocket, который возвращает сокет клиента:
{ServerSocket server = new ServerSocket(8030);
Socket socket = server.accept(); }
Таким образом, для установки необходимо установить IP-адрес и номер порта сервера, IP-адрес и номер порта клиента. Обычно порт клиента и сервера устанавливаются одинаковыми.
Клиент и сервер после установления сокетного соединения могут получать данные из потока ввода и записывать данные в поток вывода с помощью методов getInputStrеam() и getOutputStrеam() или к PrintStream для того, чтобы программа могла трактовать поток как выходные файлы.
В следующем примере для отправки клиенту строки "привет!" сервер вызывает метод getOutputStream() класса Socket. Клиент получает данные от сервера с помощью метода getInputStream().
Для разъединения клиента и сервера после завершения работы сокет закрывается с помощью метода close() класса Socket. В данном примере сервер отправляет клиенту строку "привет!", после чего разрывает связь.

public class MyServerSocket {
public static void main(String[] args) {
Socket s = null;
try { // отправка строки клиенту
//создание объекта и назначение номера порта
ServerSocket server = new ServerSocket(8030);
s = server.accept();//ожидание соединения
PrintStream ps =
new PrintStream(s.getOutputStream());
// помещение строки "привет!" в буфер
ps.println("привет!");
// отправка содержимого буфера клиенту и его очищение
ps.flush();
ps.close();
} catch (IOException e) {
System.err.println("Ошибка: " + e);}}